fullnameOverride: prometheus-stack
commonLabels: {}

grafana:
  enabled: true
  defaultDashboardsTimezone: Asia/Seoul
  ingress:
    enabled: true
    ingressClassName: alb
    annotations:
      alb.ingress.kubernetes.io/scheme: internet-facing 
      alb.ingress.kubernetes.io/target-type: ip
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80}]'
      alb.ingress.kubernetes.io/success-codes: 200-399
      alb.ingress.kubernetes.io/group.name: "monitoring"
      alb.ingress.kubernetes.io/inbound-cidrs: "220.70.12.210"
    hosts:
    - grafana.juneman.click
    paths:
    - /*
  persistence:
    type: pvc
    enabled: true
    storageClassName: ebs
    accessModes:
    - ReadWriteOnce
    size: 10Gi
    

prometheus:
  prometheusSpec:
    serviceMonitorSelectorNilUsesHelmValues: false
    retention: 5d
    retentionSize: 10GiB
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: ebs
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 10Gi

prometheusOperator:
  # -operator 설치
  enabled: true
  tls:
    enabled: false

  admissionWebhooks:
    # PrometheusRules의 형식이 올바른지 확인해주는 기능인데 control plane이 webhook 서비스에
    # 접근할 수 있어야하는 문제가 있습니다.
    enabled: true
    patch:
      tolerations: []

defaultRules:
  create: true

kubernetesServiceMonitors:
  enabled: true

kubeApiServer:
  enabled: true

kubelet:
  enabled: true

kubeControllerManager:
  enabled: true

coreDns:
  enabled: true

kubeStateMetrics:
  enabled: true

nodeExporter:
  enabled: true

kubeEtcd:
  enabled: false

kubeScheduler:
  enabled: false

kubeProxy:
  enabled: false

thanosRuler:
  enabled: false

kubeDns:
  enabled: false

alertmanager:
  enabled: false